steps:
  # Monitor doesn't need node.  Build and push that first.
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/production-deployment/multi_monitor:$TAG_NAME", "-f", "build/monitor/Dockerfile", "."]
  - name: 'gcr.io/cloud-builders/docker'
    args: ["push", "gcr.io/production-deployment/multi_monitor:$TAG_NAME"]

  # Install npm dependencies, and build bundles.
  - name: 'debian'
    args: ['cp', 'build/node/local_settings.json', 'node/local_settings.json']
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']
  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']

  # Build web and node images.
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/production-deployment/multi_web:$TAG_NAME", "-f", "build/web/Dockerfile", "."]
  - name: 'gcr.io/cloud-builders/docker'
    args: ["push", "gcr.io/production-deployment/multi_web:$TAG_NAME"]
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/production-deployment/multi_node:$TAG_NAME", "-f", "build/node/Dockerfile", "."]
  - name: 'gcr.io/cloud-builders/docker'
    args: ["push", "gcr.io/production-deployment/multi_node:$TAG_NAME"]

  # Update configs, and push to k8s
  - name: "gcr.io/cloud-builders/git"
    args: ['clone', 'https://source.developers.google.com/p/production-deployment/r/k8s-admin']
  - name: 'debian'
    args: ["bash", "-c", "cd k8s-admin && ./generate_release_configs.sh $TAG_NAME"]
  - name: "gcr.io/cloud-builders/git"
    args: ['commit', "-a", '--author="Autobuild <dev@sefaria.org>"', "-m", "Automatic update for $TAG_NAME"]
  - name: "gcr.io/cloud-builders/git"
    args: ["push", "origin", "master"]
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ["apply", "-f", "k8s-admin/k8s/_build/latest"]

#  # Update k8s.
#  - name: 'gcr.io/cloud-builders/kubectl'
#    args: ["set", "image", "deployment", "web-deployment", "web=gcr.io/production-deployment/multi_web:$TAG_NAME"]
#    env:
#    - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
#    - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'
#  - name: 'gcr.io/cloud-builders/kubectl'
#    args: ["set", "image", "deployment", "monitor-deployment", "monitor=gcr.io/production-deployment/multi_monitor:$TAG_NAME"]
#    env:
#    - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
#    - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'
#  - name: 'gcr.io/cloud-builders/kubectl'
#    args: ["set", "image", "deployment", "node-deployment", "node=gcr.io/production-deployment/multi_node:$TAG_NAME"]
#    env:
#    - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
#    - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'
#
#
#  # Update cronjobs which are dependent on an image updated during the deploy
#  # As a general rule, we want Jobs to run on the monitor image, as this is a "simple" python image without mod-wsgi
#  # todo use `set image` instead of patch. set image does not seem to be fully supported for cronjobs at the time of this writing
#  - name: 'gcr.io/cloud-builders/kubectl'
#    args: ["patch", "cronjob", "metrics", "--type=json", "-p='[{\"op\":\"replace\", \"path\": \"/spec/jobTemplate/spec/template/spec/containers/0/image\", \"value\":\"gcr.io/production-deployment/multi_monitor:$TAG_NAME\"}]'"]
#    env:
#    - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
#    - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'
#  - name: 'gcr.io/cloud-builders/kubectl'
#    args: ["patch", "cronjob", "weekly_email_notifications", "--type=json", "-p='[{\"op\":\"replace\", \"path\": \"/spec/jobTemplate/spec/template/spec/containers/0/image\", \"value\":\"gcr.io/production-deployment/multi_monitor:$TAG_NAME\"}]'"]
#    env:
#    - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
#    - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'
#  - name: 'gcr.io/cloud-builders/kubectl'
#    args: ["patch", "cronjob", "daily_email_notifications", "--type=json", "-p='[{\"op\":\"replace\", \"path\": \"/spec/jobTemplate/spec/template/spec/containers/0/image\", \"value\":\"gcr.io/production-deployment/multi_monitor:$TAG_NAME\"}]'"]
#    env:
#    - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
#    - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'
#  - name: 'gcr.io/cloud-builders/kubectl'
#    args: ["patch", "cronjob", "index_from_queue", "--type=json", "-p='[{\"op\":\"replace\", \"path\": \"/spec/jobTemplate/spec/template/spec/containers/0/image\", \"value\":\"gcr.io/production-deployment/multi_monitor:$TAG_NAME\"}]'"]
#    env:
#    - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
#    - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'


images:
  - "gcr.io/production-deployment/multi_monitor:$TAG_NAME"
  - "gcr.io/production-deployment/multi_node:$TAG_NAME"
  - "gcr.io/production-deployment/multi_web:$TAG_NAME"
